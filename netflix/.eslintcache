[{"C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\index.js":"1","C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\reportWebVitals.js":"2","C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\App.js":"3","C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\Row.js":"4","C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\Requests.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":390,"mtime":1611914392820,"results":"9","hashOfConfig":"7"},{"size":269,"mtime":1611914395233,"results":"10","hashOfConfig":"7"},{"size":884,"mtime":1611914393843,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"odmiy0",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\index.js",[],"C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\reportWebVitals.js",[],"C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\App.js",[],"C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\Row.js",["25","26"],"import React, { useState }from 'react'\r\n\r\nfunction Row({ title }) {\r\n    const [movies, setMovies] = useState([]);\r\n    return (\r\n        <div>\r\n            <h2>{title}</h2>\r\n\r\n            {/* contanier -> posters */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n",["27","28"],"C:\\DIVI\\Computer Science\\Web Development\\Netflix-Clone-App\\netflix\\src\\Requests.js",["29"],"const API_KEY = \"3d804ae3e21c83c2d10478ce1532b098\";\r\n\r\nconst requests = {\r\n    fetchNewMovies: /discover/movie?primary_release_date.gte:2014-09-15&primary_release_date.lte,2014:10,22:\r\n    fetchPopularMovies: /discover/movie ? sort_by = popularity.desc : ,\r\nget fetchPopularMovies() {\r\n        return this._fetchPopularMovies;\r\n    },\r\nset fetchPopularMovies(value) {\r\n        this._fetchPopularMovies = value;\r\n    },\r\n;\r\n    fetchBestDramaMovies: /discover/movie?with_genres=18&sort_by=vote_average.desc&vote_count.gte=10;\r\n    fetchHighestRatedMovies: /discover/movie/?certification_country=US&certification=R&sort_by=vote_average.desc;\r\n    fetchPoplularKidMovies: /discover/movie?certification_country=US&certification.lte=G&sort_by=popularity.desc;\r\n    fetchBest2010Movies: /discover/movie?primary_release_year=2010&sort_by=vote_average.desc;\r\n\r\n}\r\n\r\nexport default requests;\r\n",{"ruleId":"30","severity":1,"message":"31","line":4,"column":12,"nodeType":"32","messageId":"33","endLine":4,"endColumn":18},{"ruleId":"30","severity":1,"message":"34","line":4,"column":20,"nodeType":"32","messageId":"33","endLine":4,"endColumn":29},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":null,"fatal":true,"severity":2,"message":"39","line":4,"column":33},"no-unused-vars","'movies' is assigned a value but never used.","Identifier","unusedVar","'setMovies' is assigned a value but never used.","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"Parsing error: Invalid regular expression flag\n\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[36mconst\u001b[39m requests \u001b[33m=\u001b[39m {\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 4 | \u001b[39m    fetchNewMovies\u001b[33m:\u001b[39m \u001b[33m/\u001b[39mdiscover\u001b[33m/\u001b[39mmovie\u001b[33m?\u001b[39mprimary_release_date\u001b[33m.\u001b[39mgte\u001b[33m:\u001b[39m\u001b[35m2014\u001b[39m\u001b[33m-\u001b[39m\u001b[35m09\u001b[39m\u001b[33m-\u001b[39m\u001b[35m15\u001b[39m\u001b[33m&\u001b[39mprimary_release_date\u001b[33m.\u001b[39mlte\u001b[33m,\u001b[39m\u001b[35m2014\u001b[39m\u001b[33m:\u001b[39m\u001b[35m10\u001b[39m\u001b[33m,\u001b[39m\u001b[35m22\u001b[39m\u001b[33m:\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 5 | \u001b[39m    fetchPopularMovies\u001b[33m:\u001b[39m \u001b[33m/\u001b[39mdiscover\u001b[33m/\u001b[39mmovie \u001b[33m?\u001b[39m sort_by \u001b[33m=\u001b[39m popularity\u001b[33m.\u001b[39mdesc \u001b[33m:\u001b[39m \u001b[33m,\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 6 | \u001b[39mget fetchPopularMovies() {\u001b[0m\n\u001b[0m \u001b[90m 7 | \u001b[39m        \u001b[36mreturn\u001b[39m \u001b[36mthis\u001b[39m\u001b[33m.\u001b[39m_fetchPopularMovies\u001b[33m;\u001b[39m\u001b[0m","no-global-assign","no-unsafe-negation"]